name: Go

on:
  push:
    branches: [ main ]

jobs:
  build_and_release:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build for Linux
      run: go build -v -o=bin/linux ./...

    - name: Build for Mac
      run: GOOS=darwin GOARCH=amd64 go build -v -o=bin/mac ./...

    - name: Get current date time
      id: current_datetime
      run: echo "NOW=$(date +'%Y.%m.%d')" >> $GITHUB_ENV

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RELEASE_NAME: ${{ env.NOW }}.${{ github.run_number }}
      with:
        tag_name: ${{ env.RELEASE_NAME }}
        release_name: Release ${{ env.RELEASE_NAME }}
        draft: false
        prerelease: false

    - name: Upload "Organize my files, Woodhouse!" for Linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/linux/organizemyfiles
        asset_name: organizemyfiles.linux.bin
        asset_content_type: application/octet-stream

    - name: Upload "Organize my files, Woodhouse!" for Mac
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/mac/organizemyfiles
        asset_name: organizemyfiles.mac.bin
        asset_content_type: application/octet-stream
